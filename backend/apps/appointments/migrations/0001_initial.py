# Generated by Django 4.2 on 2025-04-23 18:28

import colorfield.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Block",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "color",
                    colorfield.fields.ColorField(
                        default="#000000", image_field=None, max_length=25, samples=None
                    ),
                ),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
            ],
            options={
                "ordering": ["start_time"],
            },
        ),
        migrations.CreateModel(
            name="Technician",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("first_name", models.CharField(max_length=30)),
                ("last_name", models.CharField(max_length=30)),
                (
                    "bg_color",
                    colorfield.fields.ColorField(
                        default="#ffffff", image_field=None, max_length=25, samples=None
                    ),
                ),
                (
                    "text_color",
                    colorfield.fields.ColorField(
                        default="#000000", image_field=None, max_length=25, samples=None
                    ),
                ),
                ("requested_hours", models.IntegerField(default=40)),
                ("max_hours_per_day", models.IntegerField(default=8)),
                (
                    "skill_level",
                    models.IntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(3),
                        ],
                    ),
                ),
                ("spanish_speaking", models.BooleanField(default=False)),
                ("notes", models.TextField(blank=True)),
            ],
            options={
                "ordering": ["first_name", "last_name"],
            },
        ),
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("first_name", models.CharField(max_length=30)),
                ("last_name", models.CharField(max_length=30)),
                ("prescribed_hours", models.IntegerField(default=0)),
                (
                    "req_skill_level",
                    models.IntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(3),
                        ],
                    ),
                ),
                ("req_spanish_speaking", models.BooleanField(default=False)),
                ("eval_done", models.BooleanField(default=False)),
                ("is_onboarding", models.BooleanField(default=False)),
                ("notes", models.TextField(blank=True)),
                (
                    "sub_notes",
                    models.TextField(
                        blank=True, help_text="Notes regarding subbing.  E.g 'No males'"
                    ),
                ),
                (
                    "past_technicians",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Technicians that have worked with this client in the past.",
                        related_name="past_clients",
                        to="appointments.technician",
                    ),
                ),
            ],
            options={
                "ordering": ["first_name", "last_name"],
            },
        ),
        migrations.CreateModel(
            name="TherapyAppointment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "therapy_type",
                    models.CharField(
                        choices=[
                            ("ot", "Occupational Therapy"),
                            ("st", "Speech Therapy"),
                        ],
                        default="ot",
                        max_length=2,
                    ),
                ),
                (
                    "day",
                    models.IntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(6),
                        ],
                    ),
                ),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                ("notes", models.TextField(blank=True)),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="therapy_appointments",
                        to="appointments.client",
                    ),
                ),
            ],
            options={
                "ordering": ["client", "day", "start_time"],
                "unique_together": {("client", "day", "start_time")},
            },
        ),
        migrations.CreateModel(
            name="Availability",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("object_id", models.UUIDField()),
                (
                    "day",
                    models.IntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(6),
                        ],
                    ),
                ),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                (
                    "is_sub",
                    models.BooleanField(
                        default=False,
                        help_text="Only applies to technicians. Indicates that this is not a regular availability, but that the technician is available to sub for another technician during this time.",
                    ),
                ),
                ("in_clinic", models.BooleanField(default=False)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Availabilities",
                "ordering": ["content_type", "object_id", "day", "start_time"],
                "unique_together": {("content_type", "object_id", "day", "start_time")},
            },
        ),
        migrations.CreateModel(
            name="Appointment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "day",
                    models.IntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(6),
                        ],
                    ),
                ),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                ("in_clinic", models.BooleanField(default=False)),
                ("notes", models.TextField(blank=True)),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="appointments",
                        to="appointments.client",
                    ),
                ),
                (
                    "technician",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="appointments",
                        to="appointments.technician",
                    ),
                ),
            ],
            options={
                "ordering": ["client", "technician", "day", "start_time"],
                "unique_together": {("client", "day", "start_time")},
            },
        ),
    ]
